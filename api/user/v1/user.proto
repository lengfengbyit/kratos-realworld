syntax = "proto3";

package user.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "kratos-realworld/api/user/v1;v1";

service UserApi {
  rpc Register(RegisterRequest) returns (UserReply) {
    option (google.api.http) = {
      post: "/api/users",
      body: "*"
    };
  }
  rpc Login(LoginRequest) returns (UserReply) {
    option (google.api.http) = {
      post: "/api/users/login",
      body: "*"
    };
  }

  rpc CurrentUser(CurrUserRequest) returns (UserReply) {
    option (google.api.http) = {
      get: "/api/user"
    };
  }
}

message User {
  string email = 1;
  string token = 2;
  string username = 3;
  string bio = 4;
  string image = 5;
}

message RegisterRequest {
  message Data {
    string email = 1 [(validate.rules).string.email = true];
    string username = 2 [(validate.rules).string = {min_len:3, max_len:32}];
    string password = 3 [(validate.rules).string = {min_len:6, max_len:32}];
  }
  Data user = 1 [(validate.rules).message.required = true];
}

message LoginRequest {
  message Data {
    string email = 1;
    string password = 2;
  }
  Data user = 1;
}

message CurrUserRequest {}

message UserReply {
  User user = 1;
}